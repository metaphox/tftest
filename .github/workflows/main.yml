# This is a basic workflow to help you get started with Actions

name: Staged Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "feat/staged-deploy" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      module-stage:
        type: choice
        description: Which module stage to deploy
        options:
        - 0-all
        - 1-bootstrap
        - 2-network
        - 3-security
        - 4-project

env:
  TF_INPUT: false
  TF_IN_AUTOMATION: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  prepare:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.determine-env.outputs.environment }}
      stages: ${{ steps.determine-stages.outputs.stages }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: determine env
        id: determine-env
        run: |
          echo "Stage: ${{ github.event.inputs.module-stage }}"
          echo "environment=prod" >> $GITHUB_OUTPUT
      - name: determine stages
        id: determine-stages
        run: |
          echo "Stage: ${{ github.event.inputs.module-stage }}"
          echo "stages=1-bootstrap,2-network,3-security,4-project" >> $GITHUB_OUTPUT

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      matrix:
        stages: [ '1-bootstrap', '2-network', '3-security', '4-project' ]
    environment: ${{ needs.prepare.outputs.environment }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.48.0
      - name: Terraform Init
        env:
          TF_LOG: DEBUG
        run: |
          terraform -chdir=${{ matrix.stages }} init
          terraform -chdir=${{ matrix.stages }} plan
