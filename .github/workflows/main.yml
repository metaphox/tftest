# This is a basic workflow to help you get started with Actions

name: Staged Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "feat/staged-deploy" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      module-stage:
        type: choice
        description: Which module stage to deploy
        options:
        - 0-all
        - 1-bootstrap
        - 2-network
        - 3-security
        - 4-project
      force:
        description: 'Force execution'
        required: true
        default: false
        type: boolean

env:
  TF_INPUT: false
  TF_IN_AUTOMATION: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  prepare:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      MODULESTAGE: ${{ github.event.inputs.module-stage }}
      ALLSTAGES: '["1-bootstrap", "2-network", "3-security", "4-project"]'
    outputs:
      environment: ${{ steps.determine-env.outputs.environment }}
      planstages: ${{ steps.determine-stages.outputs.planstages }}
      applystages: ${{ steps.determine-stages.outputs.applystages }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: determine env
        id: determine-env
        run: |
          echo "environment=prod" >> $GITHUB_OUTPUT
      
      - run: |
          echo "Action: ${{ github.event.inputs.action }}"
          echo "Parameters: ${{ github.event.inputs.parameters }}"
          echo "Dry run: ${{ github.event.inputs.dry_run }}"
          echo "Force: ${{ github.event.inputs.force }}"
      
      - run: |
          echo "::notice ::Running utility script with inputs.force: ${{ github.event.inputs.force }}"
          echo ${{ github.event.inputs.force && '--force' || '' }}
  
